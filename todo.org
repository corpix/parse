* DONE Human readable Tree and Rule
  CLOSED: [2017-06-26 Mon 12:32]
  - [X] implementation
  - [X] docs
  - [X] tests
* TODO Return UnexpectedTokenErr instead of UnexpectedEOF in some cases
  If we have some Either(foo, bar, baz) but^
  - nothing matched
  - buffer have some tokens

  Then this is likely an UnexpectedToken error at the position of buffer.
  At this moment we have(from clickhouseql):
  =Unexpected EOF at position '7' while applying '*parse.Terminal(ID: Expression, Value: [69 120 112 114 101 115 115 105 111 110])()'=
* TODO Iterative Parse
  Recursion was a quick choice we should optimize it.
* DONE Fix stringifier bugs
  CLOSED: [2017-06-26 Mon 12:33]
  From test:
  #+BEGIN_SRC text
  expected: "*parse.Chain(name: another sample chain)(*parse.testRuleFinite(name: inner1)(), \n*parse.testRuleFinite(name: inner2)(), \n*parse.testRuleFinite(name: inner3)())"
  received: "*parse.Chain(name: another sample chain)(\n  *parse.testRuleFinite(name: inner1)(), \n  *parse.testRuleFinite(name: inner2)(), \n  *parse.testRuleFinite(name: inner3)()\n)"
  #+END_SRC

  All was obtained from the stringifier. The difference in the =\s= count which depends on the length of the line.
  Type name was changed to longer string, this is the case.
* TODO Visited strigifier nodes should respect the nesting
  #+BEGIN_SRC
        *parse.Repetition(name: Whitespaces, times: 0, variadic: true)(
          *parse.Repetition(name: Whitespaces, times: 1, variadic: true)(
            *parse.Either(name: Whitespace)(
              *parse.Terminal(name: Space, value:  )(),
              *parse.Terminal(name: Tab, value: \t)(),
              *parse.Terminal(name: NewLine, value: \n)()
            )
          )
        ),
        *parse.Terminal(name: Equal, value: =)(),
        *parse.Repetition(name: Whitespaces, times: 0, variadic: true)(<circular>),
  #+END_SRC
  Here =Whitespaces= are the same rules, first showed, second showed as =<circular>=
  because you count visited nodes without respecting the branches.
